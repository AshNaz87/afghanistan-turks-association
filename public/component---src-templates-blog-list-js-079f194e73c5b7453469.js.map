{"version":3,"sources":["webpack:///./src/components/post-card.js","webpack:///./src/templates/blog-list.js"],"names":["PostCard","data","className","frontmatter","featuredImage","to","slug","fluid","childImageSharp","objectFit","objectPosition","alt","title","date","blogListQuery","Pagination","props","isFirst","prevPage","rel","Array","from","length","numPages","_","i","key","blogSlug","currentPage","isLast","nextPage","BlogIndex","render","this","pageContext","toString","posts","allMarkdownRemark","edges","filter","edge","node","map","id","description","React","Component"],"mappings":"+OAgCeA,EA5BE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACf,yBAAKC,UAAU,+BACb,6BAASA,UAAU,kBAChBD,EAAKE,YAAYC,cAChB,kBAAC,OAAD,CAAMC,GAAIJ,EAAKE,YAAYG,MACzB,kBAAC,IAAD,CACEC,MAAON,EAAKE,YAAYC,cAAcI,gBAAgBD,MACtDE,UAAU,QACVC,eAAe,UACfC,IAAKV,EAAKE,YAAYS,MAAQ,oBAC9BV,UAAU,oBAId,GAEF,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,SACZ,kBAAC,OAAD,CAAMG,GAAIJ,EAAKE,YAAYG,MAAOL,EAAKE,YAAYS,QAErD,uBAAGV,UAAU,QACX,8BAAOD,EAAKE,YAAYU,W,YCjBrBC,EAAa,YA8BpBC,EAAa,SAAAC,GAAK,OACtB,yBAAKd,UAAU,cACb,6BACIc,EAAMC,SACN,4BACE,kBAAC,OAAD,CAAMZ,GAAIW,EAAME,SAAUC,IAAI,QAC5B,0BAAMjB,UAAU,cACd,kBAAC,IAAD,OACM,IAHV,aAQHkB,MAAMC,KAAK,CAAEC,OAAQN,EAAMO,WAAY,SAACC,EAAGC,GAAJ,OACtC,wBAAIC,IAAG,qBAAsBD,EAAI,IAC/B,kBAAC,OAAD,CACEpB,GAAE,GAAKW,EAAMW,UAAiB,IAANF,EAAU,GAAKA,EAAI,GAC3CvB,UAAWc,EAAMY,cAAgBH,EAAI,EAAI,gBAAkB,OAE1DA,EAAI,QAITT,EAAMa,QACN,4BACE,kBAAC,OAAD,CAAMxB,GAAIW,EAAMc,SAAUX,IAAI,QAA9B,OACO,IACL,0BAAMjB,UAAU,eACd,kBAAC,IAAD,YAQR6B,E,kGACJC,OAAA,WAAU,IACA/B,EAASgC,KAAKjB,MAAdf,KADD,EAE2BgC,KAAKjB,MAAMkB,YAArCN,EAFD,EAECA,YAAaL,EAFd,EAEcA,SAEfN,EAA0B,IAAhBW,EACVC,EAASD,IAAgBL,EACzBL,EACJU,EAAc,GAAM,EAJL,mBAIgCA,EAAc,GAAGO,WAC5DL,EALW,UAKYF,EAAc,GAAGO,WAExCC,EAAQnC,EAAKoC,kBAAkBC,MAClCC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKtC,YAAYU,QACvC6B,KAAI,SAAAF,GAAI,OAAI,kBAAC,EAAD,CAAUd,IAAKc,EAAKC,KAAKE,GAAI1C,KAAMuC,EAAKC,UACnDzB,EAAQ,CACVC,UACAC,WACAK,WACAI,SAde,SAefC,cACAC,SACAC,YAGF,OACE,kBAAC,IAAD,CAAQ5B,UAAU,aAChB,kBAAC,IAAD,CACEU,MAAO,eAAiBgB,EAAc,OAASL,EAC/CqB,YACE,4BAA8BhB,EAAc,OAASL,IAGzD,oCACA,yBAAKrB,UAAU,yBAAyBkC,GACxC,kBAAC,EAAepB,K,GAlCA6B,IAAMC,WAwCff","file":"component---src-templates-blog-list-js-079f194e73c5b7453469.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst PostCard = ({ data }) => (\n  <div className=\"col-xs-12 col-sm-6 col-md-4\">\n    <article className=\"post-card mb-5\">\n      {data.frontmatter.featuredImage ? (\n        <Link to={data.frontmatter.slug}>\n          <Img\n            fluid={data.frontmatter.featuredImage.childImageSharp.fluid}\n            objectFit=\"cover\"\n            objectPosition=\"50% 50%\"\n            alt={data.frontmatter.title + \" - Featured image\"}\n            className=\"featured-image\"\n          />\n        </Link>\n      ) : (\n        \"\"\n      )}\n      <div className=\"post-content\">\n        <h2 className=\"title\">\n          <Link to={data.frontmatter.slug}>{data.frontmatter.title}</Link>\n        </h2>\n        <p className=\"meta\">\n          <time>{data.frontmatter.date}</time>\n        </p>\n      </div>\n    </article>\n  </div>\n)\n\nexport default PostCard\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { RiArrowRightLine, RiArrowLeftLine } from \"react-icons/ri\"\n\nimport Layout from \"../components/layout\"\nimport PostCard from \"../components/post-card\"\nimport SEO from \"../components/seo\"\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { frontmatter: { template: { eq: \"blog-post\" } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n            title\n            featuredImage {\n              childImageSharp {\n                fluid(maxWidth: 540, maxHeight: 360, quality: 80) {\n                  ...GatsbyImageSharpFluid\n                  ...GatsbyImageSharpFluidLimitPresentationSize\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\nconst Pagination = props => (\n  <div className=\"pagination\">\n    <ul>\n      {!props.isFirst && (\n        <li>\n          <Link to={props.prevPage} rel=\"prev\">\n            <span className=\"icon -left\">\n              <RiArrowLeftLine />\n            </span>{\" \"}\n            Previous\n          </Link>\n        </li>\n      )}\n      {Array.from({ length: props.numPages }, (_, i) => (\n        <li key={`pagination-number${i + 1}`}>\n          <Link\n            to={`${props.blogSlug}${i === 0 ? \"\" : i + 1}`}\n            className={props.currentPage === i + 1 ? \"is-active num\" : \"num\"}\n          >\n            {i + 1}\n          </Link>\n        </li>\n      ))}\n      {!props.isLast && (\n        <li>\n          <Link to={props.nextPage} rel=\"next\">\n            Next{\" \"}\n            <span className=\"icon -right\">\n              <RiArrowRightLine />\n            </span>\n          </Link>\n        </li>\n      )}\n    </ul>\n  </div>\n)\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const { currentPage, numPages } = this.props.pageContext\n    const blogSlug = \"/blog/\"\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage =\n      currentPage - 1 === 1 ? blogSlug : blogSlug + (currentPage - 1).toString()\n    const nextPage = blogSlug + (currentPage + 1).toString()\n\n    const posts = data.allMarkdownRemark.edges\n      .filter(edge => !!edge.node.frontmatter.date)\n      .map(edge => <PostCard key={edge.node.id} data={edge.node} />)\n    let props = {\n      isFirst,\n      prevPage,\n      numPages,\n      blogSlug,\n      currentPage,\n      isLast,\n      nextPage,\n    }\n\n    return (\n      <Layout className=\"blog-page\">\n        <SEO\n          title={\"Blog â€” Page \" + currentPage + \" of \" + numPages}\n          description={\n            \"Stackrole base blog page \" + currentPage + \" of \" + numPages\n          }\n        />\n        <h1>Blog</h1>\n        <div className=\"grids col-1 sm-2 lg-3\">{posts}</div>\n        <Pagination {...props} />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n"],"sourceRoot":""}